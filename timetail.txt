time ./timetail.py /var/log/syslog 

real    0m0.047s
user    0m0.042s
sys     0m0.008s

Line #    Mem usage    Increment   Line Contents
================================================
    46   16.777 MiB    0.000 MiB   @profile
    47                             def main():
    48   16.777 MiB    0.000 MiB       now = time.time()
    49   16.805 MiB    0.027 MiB       args = parseArgs()
    50   16.805 MiB    0.000 MiB       filepath = args.filepath
    51                             
    52                             
    53   16.805 MiB    0.000 MiB       if os.path.exists(filepath):
    54   16.805 MiB    0.000 MiB           with open(filepath, 'r') as f:
    55                                         # Mar 13 00:34:38 azalio-ub14 anacron[7773]: Job `cron.daily' terminated
    56   16.809 MiB    0.004 MiB               time_begin_in_log = f.read(15)
    57   16.809 MiB    0.000 MiB               time_begin = time.strptime(time_begin_in_log + " " +
    58   16.820 MiB    0.012 MiB                                          time.strftime("%Y"),
    59   17.023 MiB    0.203 MiB                                          "%b %d %H:%M:%S %Y")
    60                                 #        print time_begin
    61   17.023 MiB    0.000 MiB               time_begin_in_unixtime = time.mktime(time_begin)
    62                                 #        print now
    63                                 #        print time_begin_in_unixtime
    64   17.023 MiB    0.000 MiB               if (now - time_begin_in_unixtime > args.time):
    65   17.023 MiB    0.000 MiB                   filePos = find_point(f,now)
    66   17.023 MiB    0.000 MiB                   f.seek(filePos)
    67   17.027 MiB    0.004 MiB                   while True:
    68   17.027 MiB    0.000 MiB                       line = f.readline()
    69   17.027 MiB    0.000 MiB                       if line == "":
    70   17.027 MiB    0.000 MiB                           break
    71                                                 else:
    72   17.027 MiB    0.000 MiB                           line = str.strip(line)
    73   17.027 MiB    0.000 MiB                           print "{}".format(line)
    74                             
    75                                         else:
    76                                             # print from begin file
    77   17.023 MiB   -0.004 MiB                   pass

/usr/local/bin/kernprof -l -v -b ./timetail.py /var/log/syslog

Timer unit: 1e-06 s

Total time: 0.12928 s
File: /home/azalio/gitroot/azalio/scripts/timetail.py
Function: main at line 40

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    40                                           @profile
    41                                           def main():
    42         1            4      4.0      0.0      now = time.time()
    43         1         2035   2035.0      1.6      args = parseArgs()
    44         1            1      1.0      0.0      filepath = args.filepath
    45                                           
    46                                           
    47         1            6      6.0      0.0      if os.path.exists(filepath):
    48         1            7      7.0      0.0          with open(filepath, 'r') as f:
    49         1            7      7.0      0.0              time_begin_in_log = f.read(15)
    50         1            1      1.0      0.0              time_begin = time.strptime(time_begin_in_log + " " +
    51         1           11     11.0      0.0                                         time.strftime("%Y"),
    52         1         8129   8129.0      6.3                                         "%b %d %H:%M:%S %Y")
    53         1           20     20.0      0.0              time_begin_in_unixtime = time.mktime(time_begin)
    54         1            6      6.0      0.0              if (now - time_begin_in_unixtime > args.time):
    55         1       118981 118981.0     92.0                  filePos = find_point(f,now)
    56         1            4      4.0      0.0                  f.seek(filePos)
    57         4            4      1.0      0.0                  while True:
    58         4            4      1.0      0.0                      line = f.readline()
    59         4            1      0.2      0.0                      if line == "":
    60         1           18     18.0      0.0                          break
    61                                                               else:
    62         3            4      1.3      0.0                          line = str.strip(line)
    63         3           37     12.3      0.0                          print "{}".format(line)
    64                                           
    65                                                       else:
    66                                                           f.seek(0)
    67                                                           while True:
    68                                                               line = f.readline()
    69                                                               if line == "":
    70                                                                   break
    71                                                               else:
    72                                                                   line = str.strip(line)
    73                                                                   print "{}".format(line)
    74                                               else:
    75                                                   print "{} is not exist".format(filepath)
    76                                                   sys.exit(1)

